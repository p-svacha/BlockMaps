Big Features to Add:



finish hedge mesh gen
add height as param

put wallmeshgenerator code into wallmesh
same with procmesh
same with others maybe1

add roughness and normal maps to nodeshader with strength slide
add some noise to hedge material

- sloped curb sides downwards => for dirt path

- procedural entities
	> Entities whose meshes are generated at runtime
	> one mesh per chunks for all procedural entities
	>  hedge
	> rock wall
	> 1xYx1 in size, connects to adjacent rock wall entities
	> blocks path and vision
	> rendered in 1 mesh

> add surface option for air nodes
	> each surface has an option how it's drawn as a ground and/or air node
	> add all ground surfaces to air nodes too
> allow changing shape on air nodes
	- add property how many nodes below an airnode blocks (maybe based on surface)
	- remove air slope tool

(> allow any height diffs on allowed shapes)
> implement climb/hillwalk system for slopes
	- have a slope value for each transition that is 0 for flat, +1 for going 1 tile up, -1 for going 1 down etc
		- for that have a getter for each node that gives back the height on the center of the node
		- also have a getter that gives back the height of each side8 of the node
		- then for the transition calculate the slope origin.center to origin.dir * 0.5 + target.oppositedir to target.center * 0.5
	- all entities have a max slope they can walk

	
- limit vision to height (don't draw anything above height x)

- Rework hover pathfinding
	> Hover on unreachable node = no path preview
	> Hover on node with !canStandOn = red path preview
	> Hover on node within possible moves = green path preview
	> Hover on reachable node outside possible moves = yellow path preview
	> Cache paths (forever since they can never change atm)
	> Path preview max distance: If distance is bigger take node in that direction that is at max distance and show path to there
	> Clicking on yellow path moves as far as possible

- Reduce human height to 2
	> tiles are about 2x2x1 meter

- Improve ctf map generator
	> New approach: Check XCOM and PZ map generation
	> Split map into parcels
	> Parcels have their own generation system on top of height map generation
	> Parcel generation depends on bordering parcels, roads, rivers, map edge
	> Parcels can be i.e. Forest, Suburb, Reservoir, Industrial area
	> Implement rules which parcels can be next to each other
	> Increase performance


	> 1. height map generation
	> 2. line features (river, road, railroad)
	> 3. parcel distribution
	> 4. parcel connection points (to line features and other parcels)
	> 5. parcel generation
	> 6. player base generation

- Implement some line features for new map gen system
	> road
	> rail track
	> stroad
	> highway
	> creek
	> river

- Implement some parcels and content for them for new mapgen system
	> forest
	> park
	> neighbourhood
	> industry
	> mountain (cliff on 1 side)
	> swamp
	> pool

- Rework jail system
	> 1 Jail that is in neutral area
	> gives full vision for both players
	> Fully fenced off
	> Characters get teleported out of jail when jail time ends

- Make menu for creating game
	> Allow different map sizes
	> Miniscule: 7 chunks
	> Tiny: 9 chunks
	> Small: 11 chunks
	> Medium: 13 chunks
	> Big: 15 chunks
	> Huge: 17 chunks
	> Enormous: 20 chunks
	> Random

- Slopes use more action points
	> downwards * 1.25
	> upwards * 1.5

- Upon end game show full visible map

- Seperate check for entity vision independent from node vision

- Fix small bug that opponents sometimes stop moving right after starting moving when camera follows their movement, even though they stay visible

- animation system for walking / climbing entities
	> silly with just hopping from one side to the other with slight rotation

- more general modifier system
	> modifiers have a duration and effect, name, description, icon
	> move jail time to modifier
	> add ui for modifiers

- textures for entities

- doors
	> open and closeable when standing next to
	> characters get a new dexterity attribute that defines if they can open/close

- Show entity stats in static entity tool in editor
	> same way as moving entities
	> IsPassable, BlocksVision, Dimensions, RequiresFlatTerrain

- interface IWorld for world with documentation
- also IEntity and IBlockmapNode

- Static entities with weird shapes
	> adjust collider generation accordingly
	> occupiednodes turns into footprint
	> shape is a dictionary<vector2int, list<bool>> whereas the key is the position in the footprint and the value list represents which nodes are blocked based on height
	> keep dimensions as a general entity attribute, add shape to static entity
	> Make editor script for static entity that allows defining shape and previewing box colliders

- Make vision radius of entities based on their dimensions

- Water shader (very small transparency, moving, foam when hitting terrain)

- CTF: improve AI with job system
	> if we see enemy character in own zone => CHASE
	> if we see enemy flag => GO THERE
	> some "your turn" notification when turn starts

- Disallow 0101 and 1010 shapes
- Disallow 2110 and 0112 shapes
- Remove limit of max height diff within a node
	> slopes can also go up 2,3,etc.
	> keep shape requirements (max 2 different heights per node)

- water tool rework:
	> make max depth a const 3
	> make shoreheight based on mouse pointer y coordinate

- strength & destroy
	> movingentities get a new strength attribute
	> staticentities get a new durability attribute
	> walls get it too
	> entities can destroy for big stamina cost

- dont allow suface nodes with walls in water
	- affect canplacewater
	- affect canbuildwall

- Minimap
	> shows tiles
	> shows current camera position
	> shows character positions
	> interactable to move camera

- Make flags carriable
	> make a framework for carryable entties/items
	> certain characters can carry it
	> impassable zones moves with carried flag
	> if character holding flag gets tagged = game over, no matter where

- Dogs need a nearby master to work

- Jumpong ability
	> to hop over fences
	> to hop over gaps
	> jumping ability 1 = hop over 1 tile gap, hop over 1 tile fence

- Horses
	- Rideable by humans
	
- Flying
	- Hawk
	- Can't tag or be tagged, fly at fixed height
	- Only give vision

- expand entity navmesh impact options
	> make it possible that entities can block a combination of full nodes, sides and corners
	> all of it should affect the navmesh
	> visioncollider needs to be adapted too

- Add some kind of roof system
	- maybe just allow changing height on normal air nodes (like on surface)
	- allow path mesh generation for all shapes
	- and then add a second air node type: roof

- Static entities types: Like high grass, maize, foliage, debris, puddle
	> multiple static entities per node: one per type

- Add different air path types
	> each has their own mesh generator
	> each has their own attribute how many tiles they block above and below

- Add static entities that include navmesh nodes (like a container or bridge)

- fix: water fill algorithm should stop after a while (like 1000 tiles?)

- In terrain blend transitions, only do corner transitions when the corner transition exists
	> else pass -1 in the blend array and ignore in shader code
	> also add (global perlin) noise to blending texture

- Procedural Static Entities

- add new item framework
	- items behave like static entities on map, but way more limited
	- only one 1 tile, no vision, movement etc.

- add inventory system
	- entities can pick up and carry items
	- add carry capacity attribute to entities

- Improve GitHub page with desc and screenshots
	> make a release

- sound & smell
	hearing & smelling

- tunnel?

- add some new static entities
	> for new static entity ideas watch project zomboid streams

- Add additional movement methods (jump/fly)
- Add strength attribute with that you can destroy walls, entities
- Stealth/Invisibility
- Teleportation
- Terrain affinity

- Weather / Temperature (Snow/Mud)


-------- RETIRED IDEAS ------------

- decouple entity visibility from node visiblity

- impelemnt SurfaceAirNodes:	
	> Rendered like surface nodes (1x1x1 in size)
	> BaseHeight = x and Height = {x+1,x+1,x+1,x+1}

- Shoot multiple rays at a node to check vision (if performance allows)
	> also at entities on node

- Allow movingentities bigger than 1x1


