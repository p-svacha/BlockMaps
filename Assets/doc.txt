--- Update Walls V2
- New wall framework gets added:
- Walls will be stored in their own datastructure, independently of nodes
- Walls will always be in exactly one world cell

- Walls are stored in a Dictionary<Vector3Int, List<Wall>> data structure per chunk (and also a global one in World):
	Vector3 refers to the x, y, z position on the map
	WallInfo contains a List<Wall> of all walls that are inside this position with some functionality of retrieving and adding walls on a certain direction
		° GetWall(Vector3Int pos, Direction dir) returns a singular wall

- Walls have a WallMaterial attribute, that are stored in a static WallMaterialManager (just like SurfaceManager for node surfaces)
- Walls have a WallShape attribute that decides how a wall gets rendered (basically what currently WallType is)

Tools:
 - New "Free wall placement" tool where you can place walls like air nodes with 2 selections:
	> Wall shape (solid, corner, block, window, slope)
		° Decides in what directions the wall can be placed
			- Solid/Window/Slope = Side
			- Corner = Corner
			- Block = None (full cell)
	> Wall material (brick, wood, concrete)
		° Decides climbing skill requirement
	> Ctrl+Scroll to change height (like air nodes)
		° Show transparent grid on selected height
	> Hovermode changes direction

Systems to check:
 - Database systems
 - WallData to load/save
 - CurrentHoveredWall in World
 - CanPlace, Place and Remove in World
 - WallTool in Editor
	° BuildPreview depending only on shape

 - Collision checks when building other stuff
	> Air nodes
	> Fences
	> Ladders
 - Pathfinding
	> Transitions should be blocked by walls
 - Climbing
	> Add climbing checks (only shape == solid)
 - Vision
	> Vision should be blocked by walls
	> Not by window glass
	> Each wall piece has a LastSeenPosition and IsDisovered and IsSeen just like Nodes
		° Make a general IVisionTarget interface and add it to entities and walls and nodes
		° Maybe split into IStaticVisionTarget and IDynamicVisionTarget where only the dynamic one includes LastSeenPosition

---

--- Update Doors

New wall feature "Door":
 - own subclass with state attribute open/close
 - state affects navmesh
 - state affects vision
 - Mesh gen gets impacted by adjacent door

---

--- Update More Node Shapes

(> allow any height diffs on allowed shapes)
- Remove limit of max height diff within a node
	> slopes can also go up 2,3,etc.
	> keep shape requirements (max 2 different heights per node)
> implement climb/hillwalk system for slopes
	- have a slope value for each transition that is 0 for flat, +1 for going 1 tile up, -1 for going 1 down etc
		- for that have a getter for each node that gives back the height on the center of the node
		- also have a getter that gives back the height of each side8 of the node
		- then for the transition calculate the slope origin.center to origin.dir * 0.5 + target.oppositedir to target.center * 0.5
	- all entities have a max slope they can walk

---

- limit vision to height (don't draw anything above height x)

- also check entity visibility independently from node visiblity
- also check wall visibility independently from node visiblity

- Editor improvements:
	> wall drag
	> air node drag
	> proc entity drag
	> tunnel (convert ground node with all walls, entites etc to air node and create new ground node 1 below)

- Adjust entity World height (only where its drawn) based on surface it's on - a little higher on conrete etc.

- Implement some line features for new map gen system
	> road
	> rail track
	> stroad
	> highway
	> creek
	> river

- Implement some parcels and content for them for new mapgen system
	> forest
	> park
	> neighbourhood
	> industry
	> mountain (cliff on 1 side)
	> swamp
	> pool

- make a list of material indexes colorable in editor
	> save color in entityData

- Water flowing in one direction
- Waterfall

- Slopes use more action points
	> downwards * 1.25
	> upwards * 1.5


- CTF: Upon end game show full visible map

- Seperate check for entity vision independent from node vision
	> Make some other vision tests
	> note and fix vision bugs

- CTF: Fix small bug that opponents sometimes stop moving right after starting moving when camera follows their movement, even though they stay visible

- animation system for walking / climbing entities
	> silly with just hopping from one side to the other with slight rotation

- CTF: more general modifier system
	> modifiers have a duration and effect, name, description, icon
	> move jail time to modifier
	> add ui for modifiers

- textures for entities

- sloped curb sides downwards => for dirt path

- doors
	> open and closeable when standing next to
	> characters get a new dexterity attribute that defines if they can open/close

- window
	> glass material

- Show entity stats in static entity tool in editor
	> same way as moving entities
	> IsPassable, BlocksVision, Dimensions, RequiresFlatTerrain

- interface IWorld for world with documentation
- also IEntity and IBlockmapNode

- Static entities with weird shapes
	> adjust collider generation accordingly
	> occupiednodes turns into footprint
	> shape is a dictionary<vector2int, list<bool>> whereas the key is the position in the footprint and the value list represents which nodes are blocked based on height
	> keep dimensions as a general entity attribute, add shape to static entity
	> Make editor script for static entity that allows defining shape and previewing box colliders

- Make vision radius of entities based on their dimensions

- Water shader (very small transparency, moving, foam when hitting terrain)

- CTF: improve AI with job system
	> if we see enemy character in own zone => CHASE
	> if we see enemy flag => GO THERE
	> some "your turn" notification when turn starts

- water tool rework:
	> make max depth a const 3
	> make shoreheight based on mouse pointer y coordinate

- strength & destroy
	> movingentities get a new strength attribute
	> staticentities get a new durability attribute
	> walls get it too
	> entities can destroy for big stamina cost

- Minimap
	> shows tiles
	> shows current camera position
	> shows character positions
	> interactable to move camera

- Make flags carriable
	> make a framework for carryable entties/items
	> certain characters can carry it
	> impassable zones moves with carried flag
	> if character holding flag gets tagged = game over, no matter where
	> win game when flag is back home

- Dogs need a nearby master to work

- Jumpong ability
	> to hop over fences
	> to hop over gaps
	> jumping ability 1 = hop over 1 tile gap, hop over 1 tile fence

- Horses
	- Rideable by humans
	
- Flying
	- Hawk
	- Can't tag or be tagged, fly at fixed height
	- Only give vision

- Static entities types: Like high grass, maize, foliage, debris, puddle
	> multiple static entities per node: one per type

- Add static entities that include navmesh nodes (like a container or bridge)

- fix: water fill algorithm should stop after a while (like 1000 tiles?)

- In terrain blend transitions, only do corner transitions when the corner transition exists
	> else pass -1 in the blend array and ignore in shader code
	> also add (global perlin) noise to blending texture

- Procedural Static Entities

- add new item framework
	- items behave like static entities on map, but way more limited
	- only one 1 tile, no vision, movement etc.

- add inventory system
	- entities can pick up and carry items
	- add carry capacity attribute to entities

- Improve GitHub page with desc and screenshots
	> make a release

- sound & smell
	hearing & smelling

- tunnel?

- add some new static entities
	> for new static entity ideas watch project zomboid streams

- Add additional movement methods (jump/fly)
- Stealth/Invisibility
- Teleportation
- Terrain affinity

- Weather / Temperature (Snow/Mud)

- Expand entity shapes
	> Rework dimensions attribute of entities
	> Add new EntityShape class/struct
	> Each node within dimensions has a defined vision hitbox that can be [Full/None/Wall_N/E/S/W]
	> make it possible that entities can block a combination of full nodes, sides and corners
	> Impact vision
	> Impact navmesh

- Allow entites to have their own nodes

- Add UseTextures attribute to entity shader and support both modes on created models

- CTF: Rework hover pathfinding
	> Hover on unreachable node = no path preview
	> Hover on node with !canStandOn = red path preview
	> Hover on node within possible moves = green path preview
	> Hover on reachable node outside possible moves = yellow path preview
	> Cache paths (forever since they can never change atm)
	> Path preview max distance: If distance is bigger take node in that direction that is at max distance and show path to there
	> Clicking on yellow path moves as far as possible

- CTF: Improve ctf map generator
	> New approach: Check XCOM and PZ map generation
	> Split map into parcels
	> Parcels have their own generation system on top of height map generation
	> Parcel generation depends on bordering parcels, roads, rivers, map edge
	> Parcels can be i.e. Forest, Suburb, Reservoir, Industrial area
	> Implement rules which parcels can be next to each other
	> Increase performance


	> 1. height map generation
	> 2. line features (river, road, railroad)
	> 3. parcel distribution
	> 4. parcel connection points (to line features and other parcels)
	> 5. parcel generation
	> 6. player base generation

- CTF: Rework jail system
	> 1 Jail that is in neutral area
	> gives full vision for both players
	> Fully fenced off
	> Characters get teleported out of jail when jail time ends

- CTF: Make menu for creating game
	> Allow different map sizes
	> Miniscule: 7 chunks
	> Tiny: 9 chunks
	> Small: 11 chunks
	> Medium: 13 chunks
	> Big: 15 chunks
	> Huge: 17 chunks
	> Enormous: 20 chunks
	> Random


-------- RETIRED IDEAS ------------

- Disallow 0101 and 1010 shapes
- Disallow 2110 and 0112 shapes

- Shoot multiple rays at a node to check vision (if performance allows)
	> also at entities on node

- Allow movingentities bigger than 1x1