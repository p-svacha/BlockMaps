Map Features:
	- Select a feature, click on a node, and then it does something
	- i.e. Builds a house there

Map Modifiers:
	- a function that affects the whole map
	- basically a step of map gen process







--- Entity Nodes

make it possible to define invisible EntityNodes per entity
	> List<EntityNodeData>, where key is the local cell and value is the node altitudes
	> Can be defined up to 1 higher than entity height (like a crate has height 2, but a node could be defined at (0/2/0) with altitude (0,0,0,0) to make it walkable on top)
	> if it is forbid placing airnodes there
	> maybe an easy option to just add entity nodes everywhere at the top of the entity

EntityNodeData:
	Vector3Int pos, Dictionary<Direction, int> altitude, SurfaceDef surface

vision of entity node is based on entity
add HoveredEntityNode to world
	> make it possible to add fences/other entites on EntityNodes 

same with invisible EntityWalls for climbability
	> List<EntityWallData>
	> EntityWallData = Vector2Int + Direction + WallMaterialDef

---

















CTF AI:
 - Attacker: new job: Flee if seeing opponent character that sees you too
 - New role: Flag cheater (go directly towards flag even if not visible)
 - Attacker roles can change when in own territory
 - Defender role can change during patrol

make label half transparent for enemy characters that are explored but not visible (in last known position)
give everyone names
turn counter and display

Main menu
Game creation lobby

Release build on github



mapgen forest: wide road with cars
mapgen forest: house
mapgen forest: river
mapgen forest: hedges should be straighter

--- Entity Update

- Allow static entities to be able to allow having moving entities on them
	> requires jumping update
	> add container

- Show entity stats in static entity tool in editor
	> same way as moving entities
	> IsPassable, BlocksVision, Dimensions, RequiresFlatTerrain

- Static entities with weird shapes
	> adjust collider generation accordingly
	> occupiednodes turns into footprint
	> shape is a dictionary<vector2int, list<bool>> whereas the key is the position in the footprint and the value list represents which nodes are blocked based on height
	> keep dimensions as a general entity attribute, add shape to static entity
	> Make editor script for static entity that allows defining shape and previewing box colliders

- Make vision radius of entities based on their dimensions

- Static entities types: Like high grass, maize, foliage, debris, puddle
	> multiple static entities per node: one per type

- Add static entities that include navmesh nodes (like a container or bridge)

---


(> allow any height diffs on allowed shapes)
- Remove limit of max height diff within a node
	> slopes can also go up 2,3,etc.
	> keep shape requirements (max 2 different heights per node)
> implement climb/hillwalk system for slopes
	- have a slope value for each transition that is 0 for flat, +1 for going 1 tile up, -1 for going 1 down etc
		- for that have a getter for each node that gives back the height on the center of the node
		- also have a getter that gives back the height of each side8 of the node
		- then for the transition calculate the slope origin.center to origin.dir * 0.5 + target.oppositedir to target.center * 0.5
	- all entities have a max slope they can walk

- Expand entity shapes
	> Rework dimensions attribute of entities
	> Add new EntityShape class/struct
	> Each node within dimensions has a defined vision hitbox that can be [Full/None/Wall_N/E/S/W]
	> make it possible that entities can block a combination of full nodes, sides and corners
	> Impact vision
	> Impact navmesh

- Allow entites to have their own nodes
---

- Editor-Bug: Vision cutoff doesn't correctly reset when generating new map
- Editor-Bug: Decreasing tool size in ground sculpting doesn't remove overlay over previous chunks
- Editor-Feature: World Generation Tool: Expand by x chunks in direction

- Editor improvements:
	> wall height
	> wall tool: click on existing wall to change shape/material (as long as side is valid for selected shape)
	> air node drag
	> proc entity drag
	> fence drag (same side along direction, i.e. if placed east you can drag along x axis and always place east)
	> tunnel (convert ground node with all walls, entites etc to air node and create new grass ground node 1 below)


Rework shader for entities
 - Only use transparency shader on moving objects
 - Allow option to use uv space instead of world space
	> Apply this to doors

Make a list of material indexes colorable in editor
 - Save color in new attribute Color in entity and EntityData
 - all materials with an index present in the list will be given that color
 - Use for cars

 Water improvements
- Water shader (very small transparency, moving, foam when hitting terrain)
- Water flowing in one direction
- Waterfall
- water tool rework:
	> make max depth a const 3
	> make shoreheight based on mouse pointer y coordinate

Animation system for walking / climbing entities
	> silly with just hopping from one side to the other with slight rotation

Sounds



- strength & destroy
	> movingentities get a new strength attribute
	> staticentities get a new durability attribute
	> walls get it too
	> entities can destroy for big stamina cost

- Minimap
	> shows tiles
	> shows current camera position
	> shows character positions
	> interactable to move camera

- Make flags carriable
	> make a framework for carryable entties/items
	> certain characters can carry it
	> impassable zones moves with carried flag
	> if character holding flag gets tagged = game over, no matter where
	> win game when flag is back home

- Dogs need a nearby master to work

- Jumping ability
	> to hop over fences
	> to hop over gaps
	> jumping ability 1 = hop over 1 tile gap, hop over 1 tile fence

- Horses
	- Rideable by humans
	
- Flying
	- Hawk
	- Can't tag or be tagged, fly at fixed height
	- Only give vision

- fix: water fill algorithm should stop after a while (like 1000 tiles?)

- add new item framework
	- items behave like static entities on map, but way more limited
	- only one 1 tile, no vision, movement etc.

- add inventory system
	- entities can pick up and carry items
	- add carry capacity attribute to entities

- Improve GitHub page with desc and screenshots
	> make a release

- sound & smell
	hearing & smelling

- dig/tunnel?

- add some new static entities
	> for new static entity ideas watch project zomboid streams

- Add additional movement methods (jump/fly)
- Stealth/Invisibility
- Teleportation
- Terrain affinity

- Weather / Temperature (Snow/Mud)

CTF: Neutral moving entities
 - Wolves
 - 1 sneaky wolf

 CTF: more logic for dogs
  - can get distracted

- CTF: Improve performance for far away pathfinding or disable, just find a solution for the lag spikes
- CTF: Multiplayer

- CTF: Slopes use more action points
	> downwards * 1.25
	> upwards * 1.5

- CTF: Upon end game show full visible map

- CTF: more general modifier system
	> modifiers have a duration and effect, name, description, icon
	> move jail time to modifier
	> add ui for modifiers

- CTF: Rework hover pathfinding
	> Hover on unreachable node = no path preview
	> Hover on node with !canStandOn = red path preview
	> Hover on node within possible moves = green path preview
	> Hover on reachable node outside possible moves = yellow path preview
	> Cache paths (forever since they can never change atm)
	> Path preview max distance: If distance is bigger take node in that direction that is at max distance and show path to there
	> Clicking on yellow path moves as far as possible

- CTF: Rework jail system
	> 1 Jail that is in neutral area
	> gives full vision for both players
	> Fully fenced off
	> Characters get teleported out of jail when jail time ends

- CTF: Make menu for creating game
	> Allow different map sizes
	> Miniscule: 7 chunks
	> Tiny: 9 chunks
	> Small: 11 chunks
	> Medium: 13 chunks
	> Big: 15 chunks
	> Huge: 17 chunks
	> Enormous: 20 chunks
	> Random


-------- POSSIBLE PROJECT IDEAS WITH FRAMEWORK --------

- EcosystemSimulation3D
- Solo/Squad RPG (like CDDA)


-------- KNOWN ISSES --------

Camera MSAA Anti-Aliasing is causing black pixel artifacts on air node mesh seams that use the surface shader
	> so MSAA is turned off for now

Surface blending in SurfaceShader isn't perfect (but good enough so it's usually not noticable)

-------- RETIRED IDEAS ------------

- Disallow 0101 and 1010 shapes
- Disallow 2110 and 0112 shapes

- Shoot multiple rays at a node to check vision (if performance allows)
	> also at entities on node

- Allow movingentities bigger than 1x1

Add a dissolve cutout feature to NodeMaterialShader that can dissolve an area around a specific screen space coordinate:
 - https://glowfishinteractive.com/dissolving-the-world-part-1/