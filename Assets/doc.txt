Big Features to Add:

- Add multi overlay functionality to nodematerialshader (Then test on water and air ndoes)

- CTF: AI player and AI moves
	> just walk randomly
	> move camera to character when walking through visible nodes

- CTF: Moving character on same tile as enemy flag wins the game

- Improve ctf map generator
	> Add some walls
	> Add some air paths

- animation system for walking / climbing entities
	> silly with just hopping from one side to the other with slight rotation

- procedural rock wall entity
	> 1xYx1 in size, connects to adjacent rock wall entities
	> blocks path and vision
	> rendered in 1 mesh

- doors
	> open and closeable when standing next to
	> characters get a new dexterity attribute that defines if they can open/close

- Show entity stats in static entity tool in editor
	> same way as moving entities

- interface IWorld for world with documentation
- also IEntity and IBlockmapNode

- Static entities with weird shapes
	> adjust collider generation accordingly
	> occupiednodes turns into footprint
	> shape is a dictionary<vector2int, list<bool>> whereas the key is the position in the footprint and the value list represents which nodes are blocked based on height
	> keep dimensions as a general entity attribute, add shape to static entity
	> Make editor script for static entity that allows defining shape and previewing box colliders

- Make vision radius of entities based on their dimensions

- Water shader (very small transparency, moving, foam when hitting terrain)

- water tool rework:
	> make max depth a const 3
	> make shoreheight based on mouse pointer y coordinate


- turn-based movement
	> entites have Action Points
	> entities have Stamina
	> Action Point get set and depleted within 1 turn
	> Stamina is longer term and gets regenrated only a bit per turn

- strength & destroy
	> movingentities get a new strength attribute
	> staticentities get a new durability attribute
	> walls get it too
	> entities can destroy for big stamina cost


- dont allow suface nodes with walls in water
	- affect canplacewater
	- affect canbuildwall

- expand entity navmesh impact options
	> make it possible that entities can block a combination of full nodes, sides and corners
	> all of it should affect the navmesh
	> visioncollider needs to be adapted too

- Add some kind of roof system
	- maybe just allow changing height on normal air nodes (like on surface)
	- allow path mesh generation for all shapes
	- and then add a second air node type: roof

- Static entities types: Like high grass, maize, foliage, debris, puddle
	> multiple static entities per node: one per type

- Add different air path types
	> each has their own mesh generator
	> each has their own attribute how many tiles they block above and below

- Add static entities that include navmesh nodes (like a container or bridge)

- Improve Camera:
	> Shift to increase speed
	> Faster zoom (alt to decrease zoom speed)
	> Fix zoom speed on low fps

- fix: water fill algorithm should stop after a while (like 1000 tiles?)

- In terrain blend transitions, only do corner transitions when the corner transition exists
	> else pass -1 in the blend array and ignore in shader code
	> also add (global perlin) noise to blending texture

- Procedural Static Entities

- add new item framework
	- items behave like static entities on map, but way more limited
	- only one 1 tile, no vision, movement etc.

- add inventory system
	- entities can pick up and carry items
	- add carry capacity attribute to entities

- Improve GitHub page with desc and screenshots
	> make a release

- sound & smell
	hearing & smelling

- tunnel?

- add some new static entities
	> for new static entity ideas watch project zomboid streams

- Add additional movement methods (jump/fly)
- Add strength attribute with that you can destroy walls, entities
- Stealth/Invisibility
- Teleportation
- Terrain affinity

- Weather / Temperature (Snow/Mud)


-------- RETIRED IDEAS ------------

- decouple entity visibility from node visiblity

- impelemnt SurfaceAirNodes:	
	> Rendered like surface nodes (1x1x1 in size)
	> BaseHeight = x and Height = {x+1,x+1,x+1,x+1}

- Shoot multiple rays at a node to check vision (if performance allows)
	> also at entities on node

- Allow movingentities bigger than 1x1


